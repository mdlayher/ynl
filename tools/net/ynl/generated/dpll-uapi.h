// SPDX-License-Identifier: MIT
// Do not edit directly, auto-generated from:
//	Documentation/netlink/bindings/dpll.yaml/
// /home/kicinski/devel/linux/gen.py --mode uapi --header --spec ../../../../Documentation/netlink/bindings/dpll.yaml

#ifndef _UAPI_LINUX_DPLL_H
#define _UAPI_LINUX_DPLL_H

#define DPLL_FAMILY_NAME	"dpll"
#define DPLL_VERSION		1

enum dpll_genl_get_flags {
	DPLL_FLAG_SOURCES = 1,
	DPLL_FLAG_OUTPUTS = 2,
	DPLL_FLAG_STATUS = 4,
};

enum dpll_genl_status {
	DPLL_STATUS_NONE,
	DPLL_STATUS_CALIBRATING,
	DPLL_STATUS_LOCKED,
};

enum dpll_genl_signal_type {
	DPLL_TYPE_NONE,
	DPLL_TYPE_EXT_1PPS,
	DPLL_TYPE_EXT_10MHZ,
	DPLL_TYPE_SYNCE_ETH_PORT,
	DPLL_TYPE_INT_OSCILLATOR,
	DPLL_TYPE_GNSS,
	DPLL_TYPE_CUSTOM,
};

enum dpll_genl_lock_status {
	DPLL_LOCK_STATUS_UNLOCKED,
	DPLL_LOCK_STATUS_EXT_1PPS,
	DPLL_LOCK_STATUS_EXT_10MHZ,
	DPLL_LOCK_STATUS_SYNCE,
	DPLL_LOCK_STATUS_INT_OSCILLATOR,
	DPLL_LOCK_STATUS_GNSS,
};

enum dpll_genl_attr {
	DPLLA_UNSPEC,
	DPLLA_DEVICE_ID,
	DPLLA_DEVICE_NAME,
	DPLLA_SOURCE,
	DPLLA_SOURCE_ID,
	DPLLA_SOURCE_TYPE,
	DPLLA_SOURCE_SUPPORTED,
	DPLLA_OUTPUT,
	DPLLA_OUTPUT_ID,
	DPLLA_OUTPUT_TYPE,
	DPLLA_OUTPUT_SUPPORTED,
	DPLLA_STATUS,
	DPLLA_TEMP,
	DPLLA_LOCK_STATUS,
	DPLLA_FLAGS,

	__DPLLA_MAX
};
#define DPLLA_MAX (__DPLLA_MAX - 1)

enum dpll_genl_cmd {
	DPLL_CMD_UNSPEC,
	DPLL_CMD_DEVICE_GET,
	DPLL_CMD_SET_SOURCE_TYPE,
	DPLL_CMD_SET_OUTPUT_TYPE,
};

enum dpll_genl_event {
	DPLL_EVENT_DEVICE_CREATE = 1,
	DPLL_EVENT_DEVICE_DELETE,
	DPLL_EVENT_STATUS_LOCKED,
	DPLL_EVENT_STATUS_UNLOCKED,
	DPLL_EVENT_SOURCE_CHANGE,
	DPLL_EVENT_OUTPUT_CHANGE,
};

#endif /* _UAPI_LINUX_DPLL_H */
